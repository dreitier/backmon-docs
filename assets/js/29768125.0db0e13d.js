"use strict";(self.webpackChunkbackmon_docs=self.webpackChunkbackmon_docs||[]).push([[676],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>m});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),l=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=l(e.components);return a.createElement(c.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},k=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),k=l(t),m=i,d=k["".concat(c,".").concat(m)]||k[m]||p[m]||o;return t?a.createElement(d,r(r({ref:n},u),{},{components:t})):a.createElement(d,r({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=k;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var l=2;l<o;l++)r[l]=t[l];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}k.displayName="MDXCreateElement"},6300:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var a=t(7462),i=(t(7294),t(3905));const o={},r="AWS S3",s={unversionedId:"reference/backmon-configuration/storage/aws-s3",id:"reference/backmon-configuration/storage/aws-s3",title:"AWS S3",description:"If you are configuring an S3 environment, backmon automatically creates a disk for each S3 bucket. Let's suppose you",source:"@site/docs/20-reference/10-backmon-configuration/10-storage/20-aws-s3.md",sourceDirName:"20-reference/10-backmon-configuration/10-storage",slug:"/reference/backmon-configuration/storage/aws-s3",permalink:"/reference/backmon-configuration/storage/aws-s3",draft:!1,editUrl:"https://github.com/dreitier/backmon-docs/tree/main/docs/docs/20-reference/10-backmon-configuration/10-storage/20-aws-s3.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Local filesystem",permalink:"/reference/backmon-configuration/storage/local-filesystem"},next:{title:"Backup definition",permalink:"/category/backup-definition"}},c={},l=[{value:"1. Create a backmon user",id:"1-create-a-backmon-user",level:2},{value:"2. Set up a policy",id:"2-set-up-a-policy",level:2},{value:"2.1. Using auto-discovery",id:"21-using-auto-discovery",level:2},{value:"2.2. Explicitly white-listing buckets",id:"22-explicitly-white-listing-buckets",level:3},{value:"2.3. Configure permissions and attach to user",id:"23-configure-permissions-and-attach-to-user",level:3},{value:"3. Update your <code>backmon</code> configuration",id:"3-update-your-backmon-configuration",level:2},{value:"3.1. When using<code>config.yaml</code>",id:"31-when-usingconfigyaml",level:3},{value:"3.2. When using Helm",id:"32-when-using-helm",level:3}],u={toc:l};function p(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"aws-s3"},"AWS S3"),(0,i.kt)("p",null,"If you are configuring an S3 environment, ",(0,i.kt)("em",{parentName:"p"},"backmon")," automatically creates a disk for each S3 bucket. Let's suppose you\nhave the following ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"environments:\n  s3_backup:\n    access_key: my_access_key\n    secret_access_key: my_secret_access_key\n")),(0,i.kt)("p",null,"Your AWS account contains the following S3 buckets:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bucket-1")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bucket-2")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"bucket-3"))),(0,i.kt)("p",null,"Each of those buckets is considered as a disk. You have to put a ",(0,i.kt)("inlineCode",{parentName:"p"},"backup_definitions.yaml"),"\nat ",(0,i.kt)("inlineCode",{parentName:"p"},"s3://bucket-1/backup_definitions.yaml"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"s3://bucket-2/backup_definitions.yaml"),"\nand ",(0,i.kt)("inlineCode",{parentName:"p"},"s3://bucket-3/backup_definitions.yaml"),"."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Each AWS S3 bucket is a ",(0,i.kt)("em",{parentName:"p"},"backmon disk"),".")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"If you want to ignore a bucket, either use the ",(0,i.kt)("inlineCode",{parentName:"li"},"disks.exclude")," configuration key or the ",(0,i.kt)("inlineCode",{parentName:"li"},".backmonignore")," marker file."),(0,i.kt)("li",{parentName:"ul"},"If your AWS access key does not have the ",(0,i.kt)("inlineCode",{parentName:"li"},"ListBucket")," permission for one of the buckets, the bucket is ignored.")),(0,i.kt)("h2",{id:"1-create-a-backmon-user"},"1. Create a backmon user"),(0,i.kt)("p",null,"In the AWS management console, go to ",(0,i.kt)("em",{parentName:"p"},"IAM > Users > Add users")," and create a dedicated user for backmon. Just choose\n",(0,i.kt)("em",{parentName:"p"},"programmatic access")," and note down the ",(0,i.kt)("em",{parentName:"p"},"access key id")," (",(0,i.kt)("em",{parentName:"p"},"${ACCESS_KEY_ID}"),") and ",(0,i.kt)("em",{parentName:"p"},"secret access key")," (\n",(0,i.kt)("em",{parentName:"p"},"${SECRET_ACCESS_KEY}"),")."),(0,i.kt)("h2",{id:"2-set-up-a-policy"},"2. Set up a policy"),(0,i.kt)("p",null,"In the AWS management console, go to ",(0,i.kt)("em",{parentName:"p"},"IAM > Policies > Create policy")," and create a new JSON policy with the following\ncontent:"),(0,i.kt)("h2",{id:"21-using-auto-discovery"},"2.1. Using auto-discovery"),(0,i.kt)("p",null,"By default, ",(0,i.kt)("em",{parentName:"p"},"backmon")," scans all S3 buckets which belong to the user's AWS account. This requires the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListAllMyBuckets"),"\npermission:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "Version": "2012-10-17",\n  "Statement": [\n    {\n      "Sid": "ListAllBuckets",\n      "Effect": "Allow",\n      "Action": "s3:ListAllMyBuckets",\n      "Resource": "arn:aws:s3:::*"\n    },\n    {\n      "Sid": "ListDisks",\n      "Effect": "Allow",\n      "Action": [\n        "s3:ListBucket"\n      ],\n      "Resource": [\n        "arn:aws:s3:::bucket-1",\n        "arn:aws:s3:::bucket-2",\n        "arn:aws:s3:::bucket-3"\n      ]\n    },\n    {\n      "Sid": "DownloadAndPurgeFiles",\n      "Effect": "Allow",\n      "Action": [\n        "s3:GetObject",\n        "s3:DeleteObject"\n      ],\n      "Resource": [\n        "arn:aws:s3:::bucket-1/*",\n        "arn:aws:s3:::bucket-2/*",\n        "arn:aws:s3:::bucket-3/*"\n      ]\n    }\n  ]\n}\n')),(0,i.kt)("h3",{id:"22-explicitly-white-listing-buckets"},"2.2. Explicitly white-listing buckets"),(0,i.kt)("p",null,"In some environments the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListAllMyBuckets")," permission is not allowed to be assigned: Even if the user ",(0,i.kt)("em",{parentName:"p"},"backmon")," user\ncan not access the content of restricted buckets, it might leak sensitive information through the naming of the buckets.\nYou can drop the ",(0,i.kt)("inlineCode",{parentName:"p"},"ListAllBuckets")," statement from the IAM policy above. You then have to update your ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml")," with\nthe following configuration:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"environments:\n  aws_prod:\n    # ...\n    # set `auto_discover_disks` to false\n    auto_discover_disks: false\n    disks:\n        include:\n          - bucket-1\n          - bucket-2\n          - bucket-3\n")),(0,i.kt)("p",null,"With that configuration, only bucket ",(0,i.kt)("inlineCode",{parentName:"p"},"bucket-1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bucket-2")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"bucket-3")," are included."),(0,i.kt)("admonition",{type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"With whitelisting buckets, you have to specify the full name of the bucket. Using regular expressions is ",(0,i.kt)("strong",{parentName:"p"},"not"),"\npossible.")),(0,i.kt)("h3",{id:"23-configure-permissions-and-attach-to-user"},"2.3. Configure permissions and attach to user"),(0,i.kt)("p",null,"Depending upon the used functionality of ",(0,i.kt)("em",{parentName:"p"},"backmon"),", you can also adjust the permissions for the ",(0,i.kt)("inlineCode",{parentName:"p"},"DownloadAndPurgeFiles"),"\nstatement:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"IAM permission"),(0,i.kt)("th",{parentName:"tr",align:null},"Required for"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"s3:GetObject")),(0,i.kt)("td",{parentName:"tr",align:null},"downloading the ",(0,i.kt)("inlineCode",{parentName:"td"},"backup_definitions.yaml")," and ",(0,i.kt)("em",{parentName:"td"},"backmon")," runs with ",(0,i.kt)("inlineCode",{parentName:"td"},"downloads.enabled=true"),". You can narrow down this permission to the resource ",(0,i.kt)("inlineCode",{parentName:"td"},"arn:aws:s3:::bucket-1/backup_definitions.yaml")," if you do not use ",(0,i.kt)("inlineCode",{parentName:"td"},"downloads.enabled=true"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"s3:DeleteObject")),(0,i.kt)("td",{parentName:"tr",align:null},"purging, if ",(0,i.kt)("inlineCode",{parentName:"td"},"backup_definitions.yaml")," contains ",(0,i.kt)("inlineCode",{parentName:"td"},"purge=true"))))),(0,i.kt)("p",null,"Attach the policy to your recently created IAM user."),(0,i.kt)("h2",{id:"3-update-your-backmon-configuration"},"3. Update your ",(0,i.kt)("inlineCode",{parentName:"h2"},"backmon")," configuration"),(0,i.kt)("h3",{id:"31-when-usingconfigyaml"},"3.1. When using",(0,i.kt)("inlineCode",{parentName:"h3"},"config.yaml")),(0,i.kt)("p",null,"In your local ",(0,i.kt)("inlineCode",{parentName:"p"},"config.yaml"),", put in the AWS access key id and secret access key:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"environments:\n  my_aws_environment:\n    access_key_id: ${ACCESS_KEY_ID}\n    secret_access_key: ${SECRET_ACCESS_KEY}\n    auto_discover_disks: true\n")),(0,i.kt)("h3",{id:"32-when-using-helm"},"3.2. When using Helm"),(0,i.kt)("p",null,"In your ",(0,i.kt)("inlineCode",{parentName:"p"},"values.yaml"),", put in the AWS access key id and secret access key:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"backmon:\n  downloads:\n    enabled: false\n  environments:\n    aws_prod:\n      # the ${BACKMON ... } variables reference the secrets below\n      access_key_id: ${BACKMON_AWS_PROD_ACCESS_KEY_ID}\n      region: eu-central-1\n      secret_access_key: ${BACKMON_AWS_PROD_SECRET_ACCESS_KEY}\n      auto_discover_disks: true\n  log_level: debug\n  secrets:\n    - key: BACKMON_AWS_PROD_ACCESS_KEY_ID\n      # replace ${ACCESS_KEY_ID} with the access key id you noted down previously\n      value: ${ACCESS_KEY_ID}\n    - key: BACKMON_AWS_SECRET_ACCESS_KEY\n      # replace ${SECRET_ACCESS_KEY} with the secret access key you noted down previously\n      value: ${SECRET_ACCESS_KEY}\n")))}p.isMDXComponent=!0}}]);