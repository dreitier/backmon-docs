"use strict";(self.webpackChunkcloudmon_docs=self.webpackChunkcloudmon_docs||[]).push([[781],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=i.createContext({}),p=function(e){var t=i.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=p(e.components);return i.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,u=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,v=d["".concat(u,".").concat(f)]||d[f]||c[f]||a;return n?i.createElement(v,o(o({ref:t},s),{},{components:n})):i.createElement(v,o({ref:t},s))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5618:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var i=n(7462),r=n(3366),a=(n(7294),n(3905)),o=["components"],l={},u="Overview",p={unversionedId:"reference/backup-definition/overview",id:"reference/backup-definition/overview",title:"Overview",description:"The backup definition is a YAML file that describes the structure of your backups.",source:"@site/docs/reference/20-backup-definition/10-overview.md",sourceDirName:"reference/20-backup-definition",slug:"/reference/backup-definition/overview",permalink:"/cloudmon-docs/reference/backup-definition/overview",draft:!1,editUrl:"https://github.com/dreitier/cloudmon-docs/tree/main/docs/docs/reference/20-backup-definition/10-overview.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Backup definition",permalink:"/cloudmon-docs/category/backup-definition"},next:{title:"Substitutions",permalink:"/cloudmon-docs/reference/backup-definition/substitutions"}},s={},c=[{value:"directory",id:"directory",level:2},{value:"pattern",id:"pattern",level:3},{value:"pattern variable",id:"pattern-variable",level:4},{value:"pattern substitution",id:"pattern-substitution",level:4},{value:"alias",id:"alias",level:3},{value:"fuse",id:"fuse",level:3},{value:"defaults",id:"defaults",level:3},{value:"files",id:"files",level:3},{value:"file",id:"file",level:2},{value:"pattern",id:"pattern-1",level:3},{value:"pattern variable",id:"pattern-variable-1",level:4},{value:"pattern substitution",id:"pattern-substitution-1",level:4},{value:"alias",id:"alias-1",level:3},{value:"schedule",id:"schedule",level:3},{value:"sort",id:"sort",level:3},{value:"purge",id:"purge",level:3},{value:"retention-count",id:"retention-count",level:3},{value:"retention-age",id:"retention-age",level:3}],d={toc:c};function f(e){var t=e.components,n=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"overview"},"Overview"),(0,a.kt)("p",null,"The backup definition is a YAML file that describes the structure of your backups.\nIn it, you provide the information that ",(0,a.kt)("em",{parentName:"p"},"cloudmon")," needs to collect metric data, purge files, and offer file downloads."),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"cloudmon")," looks for the backup definition file called ",(0,a.kt)("inlineCode",{parentName:"p"},"backup-definition.yaml")," at the root directory of your S3 bucket.\nYou can overwrite the file naming in the ",(0,a.kt)("a",{parentName:"p",href:"/cloudmon-docs/reference/cloudmon-configuration/overview"},"cloudmon configuration file"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yaml"},"'./databases':\n  alias: DB\n  fuse:\n    - '%Y'\n    - '%M'\n    - '%D'\n  defaults:\n    schedule: 30 0 * * *\n    sort: mtime\n    purge: true\n    retention-count: 10\n    retention-age: 7d\n  files:\n    'postgres-%Y%M%D.gz':\n      alias: PostgeSQL\n      schedule: 0 1 * * *\n    '%Y%M%D_mysql_%I.gz':\n      alias: MySQL\n")),(0,a.kt)("h2",{id:"directory"},"directory"),(0,a.kt)("p",null,"A backup definition"),(0,a.kt)("h3",{id:"pattern"},"pattern"),(0,a.kt)("h4",{id:"pattern-variable"},"pattern variable"),(0,a.kt)("p",null,"A variable can be put on a ",(0,a.kt)("em",{parentName:"p"},"directory")," pattern by using two curly braces (e.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"{{variable}}"),"). For variable names only characters ",(0,a.kt)("inlineCode",{parentName:"p"},"0-9"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"A-Z"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"a-z"),", and ",(0,a.kt)("inlineCode",{parentName:"p"},"_")," are allowed.\nVariables can be referenced in a ",(0,a.kt)("em",{parentName:"p"},"file")," pattern with help of ",(0,a.kt)("inlineCode",{parentName:"p"},"${variable}"),"."),(0,a.kt)("h4",{id:"pattern-substitution"},"pattern substitution"),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"substitutions"},"Substitutions"),"."),(0,a.kt)("h3",{id:"alias"},"alias"),(0,a.kt)("p",null,"Can be used on a ",(0,a.kt)("inlineCode",{parentName:"p"},"directory")," and a ",(0,a.kt)("inlineCode",{parentName:"p"},"file"),". The alias is used when exporting metrics through the HTTP API."),(0,a.kt)("h3",{id:"fuse"},"fuse"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"fuse")," is the replacement for the original ",(0,a.kt)("inlineCode",{parentName:"p"},"grouping")," field. In contract, ",(0,a.kt)("inlineCode",{parentName:"p"},"fuse")," has to be defined on a per-directory level."),(0,a.kt)("h3",{id:"defaults"},"defaults"),(0,a.kt)("h3",{id:"files"},"files"),(0,a.kt)("h2",{id:"file"},"file"),(0,a.kt)("h3",{id:"pattern-1"},"pattern"),(0,a.kt)("h4",{id:"pattern-variable-1"},"pattern variable"),(0,a.kt)("h4",{id:"pattern-substitution-1"},"pattern substitution"),(0,a.kt)("h3",{id:"alias-1"},"alias"),(0,a.kt)("h3",{id:"schedule"},"schedule"),(0,a.kt)("h3",{id:"sort"},"sort"),(0,a.kt)("p",null,"If no sorting behaviour is defined, the sorting algorithm ",(0,a.kt)("inlineCode",{parentName:"p"},"hybrid")," is used. ",(0,a.kt)("inlineCode",{parentName:"p"},"hybrid")," uses substituion-based date fields and fills all missing information with help of ",(0,a.kt)("inlineCode",{parentName:"p"},"mtime")," of the file."),(0,a.kt)("h3",{id:"purge"},"purge"),(0,a.kt)("p",null,"If ",(0,a.kt)("inlineCode",{parentName:"p"},"purge")," is set to ",(0,a.kt)("inlineCode",{parentName:"p"},"true"),", without having an explicit retention, a limit von ",(0,a.kt)("inlineCode",{parentName:"p"},"14")," days is assumed."),(0,a.kt)("h3",{id:"retention-count"},"retention-count"),(0,a.kt)("h3",{id:"retention-age"},"retention-age"))}f.isMDXComponent=!0}}]);