"use strict";(self.webpackChunkcloudmon_docs=self.webpackChunkcloudmon_docs||[]).push([[781],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return c}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(n),c=i,k=m["".concat(d,".").concat(c)]||m[c]||u[c]||r;return n?a.createElement(k,l(l({ref:t},s),{},{components:n})):a.createElement(k,l({ref:t},s))}));function c(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5618:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return d},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var a=n(7462),i=n(3366),r=(n(7294),n(3905)),l=["components"],o={},d="Overview",p={unversionedId:"reference/backup-definition/overview",id:"reference/backup-definition/overview",title:"Overview",description:"The backup definition is a YAML file that describes the structure of your backups.",source:"@site/docs/reference/20-backup-definition/10-overview.md",sourceDirName:"reference/20-backup-definition",slug:"/reference/backup-definition/overview",permalink:"/cloudmon-docs/reference/backup-definition/overview",draft:!1,editUrl:"https://github.com/dreitier/cloudmon-docs/tree/main/docs/docs/reference/20-backup-definition/10-overview.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Backup definition",permalink:"/cloudmon-docs/category/backup-definition"},next:{title:"Substitutions",permalink:"/cloudmon-docs/reference/backup-definition/substitutions"}},s={},u=[{value:"Sample <code>backup_definitions.yaml</code> file",id:"sample-backup_definitionsyaml-file",level:3},{value:"Available configuration keys",id:"available-configuration-keys",level:2},{value:"<code>[$directory]</code>",id:"directory",level:2},{value:"Patterns",id:"patterns",level:3},{value:"Pattern variables",id:"pattern-variables",level:4},{value:"Pattern substitutions",id:"pattern-substitutions",level:4},{value:"<code>[$directory].alias</code>",id:"directoryalias",level:3},{value:"Without <code>.alias</code>",id:"without-alias",level:4},{value:"With <code>.alias</code> specified",id:"with-alias-specified",level:4},{value:"<code>[$directory].fuse</code>",id:"directoryfuse",level:3},{value:"<code>[$directory].defaults.*</code>",id:"directorydefaults",level:3},{value:"<code>[$directory].files[$file].schedule</code>",id:"directoryfilesfileschedule",level:3},{value:"<code>[$directory].files[$file].sort</code>",id:"directoryfilesfilesort",level:3},{value:"<code>[$directory].files[$file].purge</code>",id:"directoryfilesfilepurge",level:3},{value:"<code>[$directory].files[$file].retention-count</code>",id:"directoryfilesfileretention-count",level:3},{value:"<code>[$directory].files[$file].retention-age</code>",id:"directoryfilesfileretention-age",level:3},{value:"<code>[$directory].files[$file].alias</code>",id:"directoryfilesfilealias",level:3},{value:"Without <code>.alias</code>",id:"without-alias-1",level:4},{value:"With <code>.alias</code> specified",id:"with-alias-specified-1",level:4}],m={toc:u};function c(e){var t=e.components,n=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"overview"},"Overview"),(0,r.kt)("p",null,"The backup definition is a YAML file that describes the structure of your backups.\nIn it, you provide the information that ",(0,r.kt)("em",{parentName:"p"},"cloudmon")," needs to collect metric data, purge files, and offer file downloads."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"cloudmon")," looks for the backup definition file called ",(0,r.kt)("inlineCode",{parentName:"p"},"backup_definitions.yaml")," at the root directory of your disk.\nYou can overwrite the file naming in the ",(0,r.kt)("a",{parentName:"p",href:"/cloudmon-docs/reference/cloudmon-configuration/overview"},"cloudmon configuration file"),"."),(0,r.kt)("h3",{id:"sample-backup_definitionsyaml-file"},"Sample ",(0,r.kt)("inlineCode",{parentName:"h3"},"backup_definitions.yaml")," file"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"# use directory ./databases as the the root directory. You can have multiple directories in each YAML file.\n'./databases':\n  # alias is used for Prometheus metrics\n  alias: DB\n  fuse:\n    - '%Y'\n    - '%M'\n    - '%D'\n  # apply those defaults to all files.* sections. You can override each parameter in the files.* section\n  defaults:\n    # expect that a backup file is generated at 00:30 each night\n    schedule: 30 0 * * *\n    # for identifying the newest file, we use the `born_at` field\n    sort: born_at\n    # purge old files which are older than 7 days and keep at least 10 backups\n    purge: true\n    retention-count: 10\n    retention-age: 7d\n  # inside the ./databases folder there are multiple files like `postgres-20220713.gz`\n  files:\n    'postgres-%Y%M%D.gz':\n      # File alias for Prometheus   \n      alias: PostgeSQL\n      # This backup is generated at 01:00 each night\n      schedule: 0 1 * * *\n    '%Y%M%D_mysql_%I.gz':\n      alias: MySQL\n")),(0,r.kt)("h2",{id:"available-configuration-keys"},"Available configuration keys"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"),(0,r.kt)("th",{parentName:"tr",align:null},"Required"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"string"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"Directory name inside the disk, relative to the ",(0,r.kt)("inlineCode",{parentName:"td"},"backup_definition.yaml"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].alias")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<name of directory>")," (",(0,r.kt)("em",{parentName:"td"},"string"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Used alias when exporting metrics.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].fuse[]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"list of wildcard strings"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Group files together by that substitutions.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].defaults.*")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"any of .schedule, .sort, .purge, .retention-count, .retention-age"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Apply those defaults for each ",(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file]")," section. Each ",(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file].*")," key can override this default")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file]")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"map"),")"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"td"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"File pattern to check for.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file].schedule")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"valid cron definition"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Cron definition to check for files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file].sort")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"interpolation")," (",(0,r.kt)("em",{parentName:"td"},"one of ",(0,r.kt)("inlineCode",{parentName:"em"},"born_at"),", ",(0,r.kt)("inlineCode",{parentName:"em"},"modified_at"),", ",(0,r.kt)("inlineCode",{parentName:"em"},"archived_at")," or ",(0,r.kt)("inlineCode",{parentName:"em"},"interpolation")),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Used data to sort the files. The selected method uses the given field to sort the files and find the latest/newest one. In case of ",(0,r.kt)("inlineCode",{parentName:"td"},"interpolation"),", the variable substitution is applied")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file].purge")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"bool"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Purges each file which does not match ",(0,r.kt)("inlineCode",{parentName:"td"},"retention-age")," or ",(0,r.kt)("inlineCode",{parentName:"td"},"retention-count"),". If ",(0,r.kt)("inlineCode",{parentName:"td"},"purge")," is set to ",(0,r.kt)("inlineCode",{parentName:"td"},"true"),", without having an explicit retention, a limit von ",(0,r.kt)("inlineCode",{parentName:"td"},"14")," days is assumed.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file].retention-count")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"int"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Keep max number of files")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file].retention-age")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,r.kt)("em",{parentName:"td"},"duration"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Keep files newer than that")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"[$directory].files[$file].alias")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"<name of file>")," (",(0,r.kt)("em",{parentName:"td"},"string"),")"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Used alias when exporting metrics.")))),(0,r.kt)("h2",{id:"directory"},(0,r.kt)("inlineCode",{parentName:"h2"},"[$directory]")),(0,r.kt)("p",null,"The root elements for each ",(0,r.kt)("inlineCode",{parentName:"p"},"backup_definition.yaml")," are the names of the subdirectories in a disk."),(0,r.kt)("p",null,"For a directory like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"backup_definition.yaml\n/backup-1/\n  backup1.tar.gz\n  backup2.tar.gz\n/backup-2/\n  backup1.tar.gz\n  backup2.tar.gz\n")),(0,r.kt)("p",null,"you would apply the following configuration inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"backup_definition.yaml"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"'./backup-1':\n  # ... configuration options\n'./backup-2':\n  # ... configuration options\n")),(0,r.kt)("p",null,"If your ",(0,r.kt)("inlineCode",{parentName:"p"},"backup_definition.yaml")," is in the same directory as the backups, like"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"backup_definition.yaml\nbackup1.tar.gz\nbackup2.tar.gz\n")),(0,r.kt)("p",null,"you would apply this configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"'./':\n  # ... configuration options\n")),(0,r.kt)("h3",{id:"patterns"},"Patterns"),(0,r.kt)("h4",{id:"pattern-variables"},"Pattern variables"),(0,r.kt)("p",null,"A variable can be put on a ",(0,r.kt)("em",{parentName:"p"},"directory")," pattern by using two curly braces (e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"{{variable}}"),"). For variable names only characters ",(0,r.kt)("inlineCode",{parentName:"p"},"0-9"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"A-Z"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"a-z"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"_")," are allowed.\nVariables can be referenced in a ",(0,r.kt)("em",{parentName:"p"},"file")," pattern with help of ",(0,r.kt)("inlineCode",{parentName:"p"},"${variable}"),"."),(0,r.kt)("h4",{id:"pattern-substitutions"},"Pattern substitutions"),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"substitutions"},"Substitutions"),"."),(0,r.kt)("h3",{id:"directoryalias"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].alias")),(0,r.kt)("p",null,"If specified, the label ",(0,r.kt)("inlineCode",{parentName:"p"},"dir")," for the epxorted Prometheues metrics will be overwritten with the given alias."),(0,r.kt)("h4",{id:"without-alias"},"Without ",(0,r.kt)("inlineCode",{parentName:"h4"},".alias")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"'./backups':\n  files:\n    'dump-%Y%M%D.sql':\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Prometheus\ncloudmon_backup_file_age_aim_seconds{dir="./backups",disk="_samples/1.postgres-dumps",file="dump-%Y%M%D.sql"} ```\n')),(0,r.kt)("h4",{id:"with-alias-specified"},"With ",(0,r.kt)("inlineCode",{parentName:"h4"},".alias")," specified"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"'./backups':\n  alias: \"custom_backups\"\n  files:\n    'dump-%Y%M%D.sql':\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Prometheus\ncloudmon_backup_file_age_aim_seconds{dir="custom_backups",disk="_samples/1.postgres-dumps",file="dump-%Y%M%D.sql"}\n')),(0,r.kt)("h3",{id:"directoryfuse"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].fuse")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"fuse")," is the replacement for the original ",(0,r.kt)("inlineCode",{parentName:"p"},"grouping")," field. In contract, ",(0,r.kt)("inlineCode",{parentName:"p"},"fuse")," has to be defined on a per-directory level."),(0,r.kt)("p",null,"If no sorting behaviour is defined, the sorting algorithm ",(0,r.kt)("inlineCode",{parentName:"p"},"interpolation")," is used. ",(0,r.kt)("inlineCode",{parentName:"p"},"interpolation")," uses substituion-based date fields and fills all missing information with help of ",(0,r.kt)("inlineCode",{parentName:"p"},"modified_at")," date of the file."),(0,r.kt)("h3",{id:"directorydefaults"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].defaults.*")),(0,r.kt)("p",null,"If you want to use the same configuration over multiple ",(0,r.kt)("inlineCode",{parentName:"p"},"[$directory].files[$file]")," sections, you can use ",(0,r.kt)("inlineCode",{parentName:"p"},".defaults"),".\nWith ",(0,r.kt)("inlineCode",{parentName:"p"},".defaults")," you can apply the configuration keys "),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".schedule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".sort")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".purge")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".retention-count")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},".retention-age"))),(0,r.kt)("p",null,"as defaults for each ",(0,r.kt)("inlineCode",{parentName:"p"},"[$directory].files[$file].*")," section. You can can override the default key value in each ",(0,r.kt)("inlineCode",{parentName:"p"},"[$directory].files[$file]")," section."),(0,r.kt)("h3",{id:"directoryfilesfileschedule"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].files[$file].schedule")),(0,r.kt)("p",null,"Put in your crontab definition for when the backup should occur."),(0,r.kt)("h3",{id:"directoryfilesfilesort"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].files[$file].sort")),(0,r.kt)("p",null,"With help of ",(0,r.kt)("inlineCode",{parentName:"p"},".sort")," you can define which of the backup file's fields is used for sorting. Sorting is used for finding the latest/newest files (relevant for the ",(0,r.kt)("inlineCode",{parentName:"p"},"/api/download")," endpoint) and oldest files (relevant for purging)."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Key"),(0,r.kt)("th",{parentName:"tr",align:null},"Timestamp used"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"born_at")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"file-dates"},(0,r.kt)("inlineCode",{parentName:"a"},"born_at"))),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"modified_at")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"file-dates"},(0,r.kt)("inlineCode",{parentName:"a"},"modified_at"))),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"archived_at")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"file-dates"},(0,r.kt)("inlineCode",{parentName:"a"},"archived_at"))),(0,r.kt)("td",{parentName:"tr",align:null},"-")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"interpolation")),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"file-dates#interpolated_value"},"interpolated timestamp")),(0,r.kt)("td",{parentName:"tr",align:null},"\u2713")))),(0,r.kt)("p",null,"If you are not using ",(0,r.kt)("a",{parentName:"p",href:"file-dates#stat--dotstat-files"},".stat / dotstat files"),", ",(0,r.kt)("a",{parentName:"p",href:"file-dates#interpolated_timestamp"},(0,r.kt)("inlineCode",{parentName:"a"},"interpolation"))," is used."),(0,r.kt)("h3",{id:"directoryfilesfilepurge"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].files[$file].purge")),(0,r.kt)("p",null,"If set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),", files which are older than ",(0,r.kt)("inlineCode",{parentName:"p"},"retention-age")," and over the number of ",(0,r.kt)("inlineCode",{parentName:"p"},"retention-count")," are deleted."),(0,r.kt)("h3",{id:"directoryfilesfileretention-count"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].files[$file].retention-count")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},".purge")," is set to true, at least a number of ",(0,r.kt)("inlineCode",{parentName:"p"},".retention-count")," files are kept, even if they are older than ",(0,r.kt)("inlineCode",{parentName:"p"},".retention-age"),"."),(0,r.kt)("h3",{id:"directoryfilesfileretention-age"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].files[$file].retention-age")),(0,r.kt)("p",null,"If ",(0,r.kt)("inlineCode",{parentName:"p"},".purge")," is set to true, files older then ",(0,r.kt)("inlineCode",{parentName:"p"},".retention-age")," are purged. Pleas note that at least a number of ",(0,r.kt)("inlineCode",{parentName:"p"},".retention-count")," files is kept.\n",(0,r.kt)("inlineCode",{parentName:"p"},".sort")," is used to calculate if a given file is older than ",(0,r.kt)("inlineCode",{parentName:"p"},".retention-age")," from today."),(0,r.kt)("h3",{id:"directoryfilesfilealias"},(0,r.kt)("inlineCode",{parentName:"h3"},"[$directory].files[$file].alias")),(0,r.kt)("p",null,"If specified, the label ",(0,r.kt)("inlineCode",{parentName:"p"},"file")," for the epxorted Prometheues metrics will be overwritten with the given alias."),(0,r.kt)("h4",{id:"without-alias-1"},"Without ",(0,r.kt)("inlineCode",{parentName:"h4"},".alias")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"'./backups':\n  files:\n    'dump-%Y%M%D.sql':\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Prometheus\ncloudmon_backup_file_age_aim_seconds{dir="./backups",disk="_samples/1.postgres-dumps",file="dump-%Y%M%D.sql"} ```\n')),(0,r.kt)("h4",{id:"with-alias-specified-1"},"With ",(0,r.kt)("inlineCode",{parentName:"h4"},".alias")," specified"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"'./backups':\n  files:\n    'dump-%Y%M%D.sql':\n    alias: \"pg-dump\"\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'# Prometheus\ncloudmon_backup_file_age_aim_seconds{dir="./backups",disk="_samples/1.postgres-dumps",file="pg-dump"}\n')))}c.isMDXComponent=!0}}]);