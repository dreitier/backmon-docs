"use strict";(self.webpackChunkcloudmon_docs=self.webpackChunkcloudmon_docs||[]).push([[781],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),s=p(n),c=r,k=s["".concat(d,".").concat(c)]||s[c]||m[c]||i;return n?a.createElement(k,l(l({ref:t},u),{},{components:n})):a.createElement(k,l({ref:t},u))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},5618:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return c},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],o={},d="Overview",p={unversionedId:"reference/backup-definition/overview",id:"reference/backup-definition/overview",title:"Overview",description:"The backup definition is a YAML file that describes the structure of your backups.",source:"@site/docs/reference/20-backup-definition/10-overview.md",sourceDirName:"reference/20-backup-definition",slug:"/reference/backup-definition/overview",permalink:"/cloudmon-docs/reference/backup-definition/overview",draft:!1,editUrl:"https://github.com/dreitier/cloudmon-docs/tree/main/docs/docs/reference/20-backup-definition/10-overview.md",tags:[],version:"current",sidebarPosition:10,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Backup definition",permalink:"/cloudmon-docs/category/backup-definition"},next:{title:"Substitutions",permalink:"/cloudmon-docs/reference/backup-definition/substitutions"}},u={},m=[{value:"Backup definition file <code>backup_definitions.yaml</code>",id:"backup-definition-file-backup_definitionsyaml",level:2},{value:"Sample <code>backup_definitions.yaml</code> file",id:"sample-backup_definitionsyaml-file",level:3},{value:"directory",id:"directory",level:2},{value:"pattern",id:"pattern",level:3},{value:"pattern variable",id:"pattern-variable",level:4},{value:"pattern substitution",id:"pattern-substitution",level:4},{value:"fuse",id:"fuse",level:3}],s={toc:m};function c(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"overview"},"Overview"),(0,i.kt)("p",null,"The backup definition is a YAML file that describes the structure of your backups.\nIn it, you provide the information that ",(0,i.kt)("em",{parentName:"p"},"cloudmon")," needs to collect metric data, purge files, and offer file downloads."),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"cloudmon")," looks for the backup definition file called ",(0,i.kt)("inlineCode",{parentName:"p"},"backup_definitions.yaml")," at the root directory of your S3 bucket.\nYou can overwrite the file naming in the ",(0,i.kt)("a",{parentName:"p",href:"/cloudmon-docs/reference/cloudmon-configuration/overview"},"cloudmon configuration file"),"."),(0,i.kt)("h2",{id:"backup-definition-file-backup_definitionsyaml"},"Backup definition file ",(0,i.kt)("inlineCode",{parentName:"h2"},"backup_definitions.yaml")),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Required"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"string"),")"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Yes")),(0,i.kt)("td",{parentName:"tr",align:null},"Directory inside the disk, relative to the ",(0,i.kt)("inlineCode",{parentName:"td"},"backup_definition.yaml"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].alias")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<name of directory>")," (",(0,i.kt)("em",{parentName:"td"},"string"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Used alias when exporting metrics.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].fuse[]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"list of wildcard strings"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Group files together by that substitutions.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].fuse[]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"list of wildcard strings"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Group files together by that substitutions.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].defaults")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"default configuration for directories[].files[]"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Is applied for each of the ",(0,i.kt)("inlineCode",{parentName:"td"},"directories[].files[]"),". Each ",(0,i.kt)("inlineCode",{parentName:"td"},"files[]")," entry can overwrite the defaults.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].defaults.schedule")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"valid cron definition"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Cron definition to check for files")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].defaults.sort")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"one of ",(0,i.kt)("inlineCode",{parentName:"em"},"mtime"),", ",(0,i.kt)("inlineCode",{parentName:"em"},"atime")),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"NOT YET. Sorting algorithm")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].defaults.purge")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"bool"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Purges each file which does not match ",(0,i.kt)("inlineCode",{parentName:"td"},"retention-age")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"retention-count"),". If ",(0,i.kt)("inlineCode",{parentName:"td"},"purge")," is set to ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", without having an explicit retention, a limit von ",(0,i.kt)("inlineCode",{parentName:"td"},"14")," days is assumed.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].defaults.retention-count")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"int"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Keep max number of files")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].defaults.retention-age")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"duration"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Keep files newer than that")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].files[]")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"map"),")"),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Yes")),(0,i.kt)("td",{parentName:"tr",align:null},"File pattern to check for. You can use the same parameters as in the ",(0,i.kt)("inlineCode",{parentName:"td"},".defaults")," section.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"directories[].files[].alias")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<name of file>")," (",(0,i.kt)("em",{parentName:"td"},"string"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"Used alias when exporting metrics.")))),(0,i.kt)("h3",{id:"sample-backup_definitionsyaml-file"},"Sample ",(0,i.kt)("inlineCode",{parentName:"h3"},"backup_definitions.yaml")," file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"'./databases':\n  alias: DB\n  fuse:\n    - '%Y'\n    - '%M'\n    - '%D'\n  defaults:\n    schedule: 30 0 * * *\n    sort: mtime\n    purge: true\n    retention-count: 10\n    retention-age: 7d\n  files:\n    'postgres-%Y%M%D.gz':\n      alias: PostgeSQL\n      schedule: 0 1 * * *\n    '%Y%M%D_mysql_%I.gz':\n      alias: MySQL\n")),(0,i.kt)("h2",{id:"directory"},"directory"),(0,i.kt)("p",null,"A backup definition"),(0,i.kt)("h3",{id:"pattern"},"pattern"),(0,i.kt)("h4",{id:"pattern-variable"},"pattern variable"),(0,i.kt)("p",null,"A variable can be put on a ",(0,i.kt)("em",{parentName:"p"},"directory")," pattern by using two curly braces (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"{{variable}}"),"). For variable names only characters ",(0,i.kt)("inlineCode",{parentName:"p"},"0-9"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"A-Z"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"a-z"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"_")," are allowed.\nVariables can be referenced in a ",(0,i.kt)("em",{parentName:"p"},"file")," pattern with help of ",(0,i.kt)("inlineCode",{parentName:"p"},"${variable}"),"."),(0,i.kt)("h4",{id:"pattern-substitution"},"pattern substitution"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"substitutions"},"Substitutions"),"."),(0,i.kt)("h3",{id:"fuse"},"fuse"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"fuse")," is the replacement for the original ",(0,i.kt)("inlineCode",{parentName:"p"},"grouping")," field. In contract, ",(0,i.kt)("inlineCode",{parentName:"p"},"fuse")," has to be defined on a per-directory level."),(0,i.kt)("p",null,"If no sorting behaviour is defined, the sorting algorithm ",(0,i.kt)("inlineCode",{parentName:"p"},"hybrid")," is used. ",(0,i.kt)("inlineCode",{parentName:"p"},"hybrid")," uses substituion-based date fields and fills all missing information with help of ",(0,i.kt)("inlineCode",{parentName:"p"},"mtime")," of the file."))}c.isMDXComponent=!0}}]);