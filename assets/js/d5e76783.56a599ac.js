"use strict";(self.webpackChunkcloudmon_docs=self.webpackChunkcloudmon_docs||[]).push([[508],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=r,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(f,o(o({ref:t},c),{},{components:n})):a.createElement(f,o({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8668:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={},s=".stat / dotstat files",p={unversionedId:"reference/backup-definition/dot-stat-files",id:"reference/backup-definition/dot-stat-files",title:".stat / dotstat files",description:"A regular requirement is to evaluate the duration to create the backup. For example, you can use the duration to see if productive services are affected during a longer backup.",source:"@site/docs/reference/20-backup-definition/25-dot-stat-files.md",sourceDirName:"reference/20-backup-definition",slug:"/reference/backup-definition/dot-stat-files",permalink:"/cloudmon-docs/reference/backup-definition/dot-stat-files",draft:!1,editUrl:"https://github.com/dreitier/cloudmon-docs/tree/main/docs/docs/reference/20-backup-definition/25-dot-stat-files.md",tags:[],version:"current",sidebarPosition:25,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Substitutions",permalink:"/cloudmon-docs/reference/backup-definition/substitutions"},next:{title:"Purging",permalink:"/cloudmon-docs/reference/backup-definition/purging"}},c={},u=[{value:"Example format of <code>.stat</code> file",id:"example-format-of-stat-file",level:2},{value:"Sample script for creating backup files",id:"sample-script-for-creating-backup-files",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"stat--dotstat-files"},".stat / dotstat files"),(0,i.kt)("p",null,"A regular requirement is to evaluate the duration to create the backup. For example, you can use the duration to see if productive services are affected during a longer backup."),(0,i.kt)("p",null,"For file systems there are different attributes (mtime, ctime, atime) to record the times of changes to files. Since the creation date of a file in the local file system and a file copied to S3 cannot be tracked, ",(0,i.kt)("em",{parentName:"p"},"cloudmon")," supports ",(0,i.kt)("inlineCode",{parentName:"p"},".stat")," files. In these you can easily store metadata for your backup files: e.g. the creation or upload date of the file."),(0,i.kt)("h1",{id:"naming-of-the-stat-files"},"Naming of the .stat files"),(0,i.kt)("p",null,"The .stat file has the same filename as the backup file, except that you have to add the suffix ",(0,i.kt)("inlineCode",{parentName:"p"},".stat")," at the end.\nIf your backup file is named ",(0,i.kt)("inlineCode",{parentName:"p"},"20220719-postgres.tar.gz"),", you must name your ",(0,i.kt)("inlineCode",{parentName:"p"},".stat")," file ",(0,i.kt)("inlineCode",{parentName:"p"},"20220719-postgres.tar.gz.stat"),"."),(0,i.kt)("h1",{id:"format-of-the-stat-files"},"Format of the .stat files"),(0,i.kt)("p",null,"The .stat files have a simple YAML format. cloudmon recognizes the following keys:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,i.kt)("th",{parentName:"tr",align:null},"Default"),(0,i.kt)("th",{parentName:"tr",align:null},"Required"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"born_at")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty>")," (",(0,i.kt)("em",{parentName:"td"},"unix timestamp"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"The time when the file was created.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"modified_at")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty")," (",(0,i.kt)("em",{parentName:"td"},"unix timestamp"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"The time when the contents of the file were last modified")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"archived_at")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"<empty")," (",(0,i.kt)("em",{parentName:"td"},"unix timestamp"),")"),(0,i.kt)("td",{parentName:"tr",align:null},"No"),(0,i.kt)("td",{parentName:"tr",align:null},"The time when the file has been archived, i.e. moved to the long-term archive.")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The difference between ",(0,i.kt)("inlineCode",{parentName:"li"},"modified_at")," - ",(0,i.kt)("inlineCode",{parentName:"li"},"born_at")," gives the duration in seconds that was needed to create the backup."),(0,i.kt)("li",{parentName:"ul"},"The field ",(0,i.kt)("inlineCode",{parentName:"li"},"archived_at")," can be set if after creating the backup an upload to a long-term archive like S3 does not happen directly. You can simply add the parameter before you upload the backup and dotstat file.")),(0,i.kt)("h2",{id:"example-format-of-stat-file"},"Example format of ",(0,i.kt)("inlineCode",{parentName:"h2"},".stat")," file"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"born_at: 12313213\narchived_at: 13818188\nmodified_at: 129939399\n")),(0,i.kt)("h2",{id:"sample-script-for-creating-backup-files"},"Sample script for creating backup files"),(0,i.kt)("p",null,"For example, if you create your backups with pg_dump, you can store the values as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'TODAY=$(date +\'%Y%m%d\')\nFILE="/tmp/${TODAY}.tar"\nNOW=$(date +"%s")\n\n# create dump\necho "born_at: $NOW" >> "$FILE.stat"\npg_dump -U postgres -F t my_database > $FILE\nNOW=$(date +"%s")\necho "modified_at: $NOW" >> "$FILE.stat"\n\n# for demonstration purposes, sleep some seconds\nsleep 300\nNOW=$(date +"%s")\n# copy backup to S3\naws s3 cp "$FILE." s3://my-backup-bucket/\necho "archived_at: $NOW" >> "$FILE.stat"\naws s3 cp "$FILE.stat" s3://my-backup-bucket/\n')))}m.isMDXComponent=!0}}]);